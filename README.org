* NEM Bill Modelling

** Overview
This project aim to be able to reproduce an energy bill for a billing period
using available pricing and tariff data. 

This repository contains Python scripts to download, process, and aggregate
electricity price and demand data from the Australian Energy Market Operator
(AEMO). The scripts store the processed data in an SQLite database and provide
aggregated hourly statistics.

** Features
In Python:
- Downloads price and demand data from AEMO using `wget`
- Stores data in an SQLite database (`model.db`)
- Aggregates data into hourly bins
- Calculates:
  - Average, minimum, and maximum values for demand and RRP (Regional Reference Price)
  - Sum and sum of squares for demand and RRP (for variance calculation)
  - Count of records per hour

** Installation
*** Direct Install
Ensure you have Python3 installed along with the required dependencies. You can
install them using:

#+BEGIN_SRC sh
pip install -r requirements.txt
#+END_SRC

Key dependencies include:
- sqlite3 (for database operations)
- PyYAML (for configuration parsing)

The checkout the repository.
#+begin_src shell
  git clone https://github.com/PaulSchulz/nem-bill-modelling
#+end_src

*** Virtual Environment (venv) - Preferred
Depending on your Python environment, it might also be worthwhile using a
virtual environment, prior to installing additional requirements, by using:

#+BEGIN_SRC sh
  python3 -m venv venv
  . venv/bin/activate
#+END_SRC

*** Configuration
The 'config.yaml' file stores global configuration parameters. These can be
edited to change where files are stored. etc.

#+BEGIN_SRC yaml
---
debug: True
data:
  year: 2024
  path: ./data/download
database:
  path: ./data/data.db
#+END_SRC

** Setup
*** Step 1: Download Data
Run the script to download CSV files from AEMO for the year of interest.

#+BEGIN_SRC sh
python3 src/scripts/get-aemo-data.py
#+END_SRC

*** Step 2: Create SQLite3 database
#+BEGIN_SRC sh
  python3 src/scrpts/create-db.py
#+END_SRC

*** Step 3: Import Data into SQLite3 database
#+BEGIN_SRC sh
  python3 src/scripts/import-aemo-data.py
#+END_SRC

*** Step 4: Generate aggregate hourly pricing data
#+BEGIN_SRC sh
python3 hourly_aggregation_query.py
#+END_SRC

** Bill Generation and Simulation 

Edit the 'tariffs.ymal' directory to reflect the available electricity tariffs.

#+begin_src yaml
  ---
  flat_rate:
    price_per_kwh: 0.30

  tou:
    peak_price: 0.50
    shoulder_price: 0.35
    off_peak_price: 0.20
    peak_hours: [17, 18, 19, 20, 21]
    shoulder_hours: [7, 8, 9, 10, 11, 15, 16]
    off_peak_hours: [0, 1, 2, 3, 4, 5, 6, 12, 13, 14, 22, 23]

  demand:
    energy_price: 0.25
    demand_price_per_kw: 10.00

  feed_in:
    price_per_kwh: 0.10
#+end_src

Run the simulation script.

#+begin_src sh
  python3 src/modelling/simulate_bill.py
#+end_src

** Output
The aggregated data is stored in the `price_and_demand_aggregation` table in
`model.db`. The table schema includes:

- `REGION` (Text)
- `HOUR` (Timestamp, rounded to the hour)
- `COUNT` (Number of records aggregated per hour)
- `AVG_DEMAND`, `MIN_DEMAND`, `MAX_DEMAND` (Demand statistics)
- `AVG_RRP`, `MIN_RRP`, `MAX_RRP` (RRP statistics)
- `SUM_RRP`, `SUM_RRP_SQUARED` (For variance calculation)
- `SUM_DEMAND`, `SUM_DEMAND_SQUARED` (For variance calculation)

** License
This project is licensed under the MIT License.

